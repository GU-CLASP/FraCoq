
- Add a time parameter to verbs.

(leave t0 smith)

** Transitivity of "before"

Consider Fracas 261:

P1	Smith left before Jones left.
P2	Jones left before Anderson left.
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
H  	Smith left before Anderson left. 


First idea:

P1   ∃t1, t2. s(t1) ∧ j(t2) ∧ t1 < t2
P2   ∃t3, t4. j(t3) ∧ a(t4) ∧ t3 < t4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
H    ∃t5, t6. s(t3) ∧ a(t4) ∧ t5 < t6

Not possible, because we cannot identify t2 and t3. Informally, "jones
left" may refer to two different events (times).


We can try to use some dynamic semantics to do the identification. We could have:


     ∀t1, t2, t3.
P1   s(t1) ∧ j(t2) ∧ t1 < t2
P2   j(t2) ∧ a(t3) ∧ t2 < t3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
H    s(t1) ∧ a(t3) ∧ t1 < t3


Whenever a (past) clause is evaluated.
  - allocate a fresh time t, evaluate.
  - P(t) be the result.
  - check if P(t) anti-unifies with any clause Q in "true facts", such that P(τ) ⊆ Q for some τ.
  - no:
    - push it in "true facts"
    - return P(t)
  - yes:
    - push it in "true facts" -- it may be a slightly different version!
    - return P(τ)


** Referencing previous times

We search for an event (τ) using a predicate P(t). P mentions all the
arguments of the verb. The principle seems to be that one should use
atomic events. Indeed, consider "Jones left quickly. Smith left before
jones left." The adverb "quickly" should be ignored when looking for
"jones left". Thus it seems that the right level to search for events
should be lexical items. Unfortunately, due to the left-to-right
nature of the dynamic semantics, all the objects of the verb are not
available at this point. (The motegovian semantics PTQ dictate that
the subject isn't available *as a dynamic object* at the point of
processing the verb.) So instead with process events at the predVP
combinator. To acess atoms we break down the logical formula. See the
(ATOM) marks in the code.

** Reference time

Each clause returns the time which is the reference for it
happening. This allows interpretation of "before", etc.

** Time adverbs

Time adverbs, such as "Since", "always", "never" introduce *local*
quantification over a timespan. (In constrast to the global creation
of time references for VPs in general.)

This scope may be extended if the event is referred to:

"john has been eating meat since 1978. When he eats meat he gets sick."


** Dealing with Aspects

- Every verb is associated 2 time parameters (start and end of the
  event), called x and y below.
- Possible aspects:

| Name                   | Example                   | Interpretation     |
|------------------------+---------------------------+--------------------|
| activity               | swam (269)                | x <= y             |
| activity with interval | swam *for* 1 minute (269) | x+1min <= y        |
| accomplishment         | signed the contract (268) | x = y+epsilon      |
| accomplishment w/ ivl. | wrote a book *in* 2 hours | x+2hours = y       |
| achievement            | drownend                  | x = y              |
| stative                | live in london            | TODO (for now x=y) |

** Repeatability of accomplishments
We capture repeatability via the use of an existential. Example:

smith wrote his novel.

∀t<NOW. ∀x. Novel(x) ∧ Has(smith,x) ∧ write(smith,x,t,t)

And it will be possible to lookup other instances of
write(smith,x,?,?) in the environment.

On the other hand:

smith wrote a novel.

∀t<NOW. ∃x. novel(x) ∧ write(smith,x,t,t)

but further mentions of "smith wrote a novel" will introduce another
variable in the existential which won't match that of the environment.

Another evidence for the correctness of the analyis is that, if we have:


smith wrote a novel in 1992
----------------------------
not (smith wrote it in 1993)

the inference can be made because the object will be the same variable
again.
